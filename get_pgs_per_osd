#!/bin/bash
#
# from: http://cephnotes.ksperis.com/blog/2015/02/23/get-the-number-of-placement-groups-per-osd/
#
#
# 
#

function usage() {
    echo
    echo "USAGE: `basename $0` [poolname] [-h]"
    echo "    -h        display this help and exit."
    echo "    poolname  distribution a single pool or whole pool.  defaultï¼šwhole pool"
}


function stats_pg() {
	#ceph pg dump | awk '
	$@ | awk '
	/^PG_STAT/ { col=1; while($col!="UP") {col++}; col++ }
	 /^[0-9a-f]+\.[0-9a-f]+/ { match($0,/^[0-9a-f]+/); pool=substr($0, RSTART, RLENGTH); poollist[pool]=0;
	 up=$col; i=0; RSTART=0; RLENGTH=0; delete osds; while(match(up,/[0-9]+/)>0) { osds[++i]=substr(up,RSTART,RLENGTH); up = substr(up, RSTART+RLENGTH) }
	 for(i in osds) {array[osds[i],pool]++; osdlist[osds[i]];}
	}
	END {
	 printf("\n");
	 printf("pool :\t"); for (i in poollist) printf("%s\t",i); printf("| SUM \n");
	 for (i in poollist) printf("--------"); printf("----------------\n");
	 for (i in osdlist) { printf("osd.%i\t", i); sum=0;
	   for (j in poollist) { printf("%i\t", array[i,j]); sum+=array[i,j]; sumpool[j]+=array[i,j] }; printf("| %i\n",sum) }
	 for (i in poollist) printf("--------"); printf("----------------\n");
	 printf("SUM :\t"); for (i in poollist) printf("%s\t",sumpool[i]); printf("|\n");
	}'
}

if [ -n "$1" ];then                # have a word
    if [ "-h" = "$1" ];then        # help
        usage
    else                           # distribution a single pool
        POOLNAME=$1
        stats_pg ceph pg ls-by-pool ${POOLNAME}
    fi 
else                               # distribution whole pool
    stats_pg ceph pg dump
fi

exit 0
